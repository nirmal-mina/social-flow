openapi: 3.0.0
info:
  title: Recommendation Service API
  version: "0.1.0"
  description: Lightweight recommendation endpoints used by frontend
servers:
  - url: https://api.example.com/recommendation
paths:
  /health:
    get:
      summary: Health check
      responses:
        "200":
          description: OK

  /recommendations/{user_id}:
    get:
      summary: Get recommendations for a user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: Recommendations list
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  recommendations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recommendation'

  /trending:
    get:
      summary: Get trending items
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: Trending items
          content:
            application/json:
              schema:
                type: object
                properties:
                  trending:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrendingItem'

  /feedback:
    post:
      summary: Record user feedback (views, likes, shares)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        "200":
          description: Recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: recorded
        "400":
          description: Validation error

components:
  schemas:
    Recommendation:
      type: object
      properties:
        item_id:
          type: string
        score:
          type: number
    TrendingItem:
      type: object
      properties:
        item_id:
          type: string
        views:
          type: integer
    Feedback:
      type: object
      required: [user_id, item_id, action, timestamp]
      properties:
        user_id:
          type: string
        item_id:
          type: string
        action:
          type: string
          description: view, like, share, dislike
        timestamp:
          type: integer
          description: epoch seconds
