"""
Video model including variants for uploads, live streams, and playlists.
Keep video metadata denormalized for fast client rendering.
"""

type Video implements Identifiable & Content {
  id: ID!
  uploader: User!
  channelId: ID                       # optional, if channels are modeled separately
  title: String!
  description: String
  videoUrl: URL!                       # canonical playback URL (HLS/DASH manifest or CDN link)
  playbackRenditions: [PlaybackRendition!] # different renditions (resolutions/bitrates)
  thumbnailUrl: URL
  thumbnails: [URL!]
  tags: [String!]
  views: Int!
  likes: Int!
  dislikes: Int!
  commentsCount: Int!
  durationSeconds: Int
  captionsAvailable: Boolean
  live: Boolean
  liveStreamInfo: LiveStreamInfo
  visibility: VideoVisibility!
  monetization: VideoMonetization
  createdAt: DateTime!
  updatedAt: DateTime
  metadata: JSON
}

type PlaybackRendition {
  id: ID!
  url: URL!
  container: String
  codec: String
  resolution: String  # e.g., "1920x1080"
  bitrate: Int
  width: Int
  height: Int
  sizeBytes: Int
  metadata: JSON
}

type LiveStreamInfo {
  streamId: ID!
  isActive: Boolean!
  startedAt: DateTime
  endedAt: DateTime
  viewersNow: Int
  ingestUrl: URL
  hlsUrl: URL
  metadata: JSON
}

type VideoMonetization {
  monetized: Boolean!
  adEligible: Boolean!
  revenueSharePercent: Float
  metadata: JSON
}

"""
VideoPayload returned from mutations (upload, update).
"""
type VideoPayload {
  video: Video
  warnings: [String!]
  errors: [Error!]
}
