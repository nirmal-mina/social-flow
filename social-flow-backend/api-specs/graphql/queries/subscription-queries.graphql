"""
Subscription & payments queries: fetch active subscriptions, invoices, plan catalog, and billing history.
"""
type Query {
  """
  Get available subscription plans.
  """
  subscriptionPlans: [SubscriptionPlan!]!

  """
  Get a user's active subscription (if any).
  """
  activeSubscription(userId: ID!): Subscription

  """
  Get subscription history / invoices for a user.
  """
  subscriptionHistory(userId: ID!, first: Int = 20, after: String): SubscriptionConnection!

  """
  Fetch billing invoices / receipts.
  """
  invoices(userId: ID!, first: Int = 20, after: String): InvoiceConnection!
}

type SubscriptionPlan {
  id: ID!
  name: String!
  description: String
  price: Float!
  currency: String!
  interval: BillingInterval!
  features: [String!]
  active: Boolean!
}

enum BillingInterval {
  MONTHLY
  YEARLY
  WEEKLY
  ONE_TIME
}

type Subscription {
  id: ID!
  userId: ID!
  plan: SubscriptionPlan!
  status: SubscriptionStatus!
  startedAt: DateTime!
  expiresAt: DateTime
  metadata: JSON
}

enum SubscriptionStatus {
  ACTIVE
  PAST_DUE
  CANCELLED
  TRIALING
  EXPIRED
}

type SubscriptionConnection {
  edges: [SubscriptionEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SubscriptionEdge {
  cursor: String!
  node: Subscription!
}

type InvoiceConnection {
  edges: [InvoiceEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type InvoiceEdge {
  cursor: String!
  node: Invoice!
}

type Invoice {
  id: ID!
  userId: ID!
  amount: Float!
  currency: String!
  issuedAt: DateTime!
  paidAt: DateTime
  status: PaymentStatus!
  lineItems: [InvoiceLineItem!]!
  metadata: JSON
}

type InvoiceLineItem {
  description: String!
  quantity: Int!
  unitPrice: Float!
  total: Float!
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}
