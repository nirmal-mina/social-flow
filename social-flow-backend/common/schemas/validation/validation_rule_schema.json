{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://socialflow.com/schemas/validation/validation_rule_schema.json",
  "title": "ValidationRule",
  "description": "Canonical definition for a single validation rule. Validators should use this to register, version, and enforce rules consistently.",
  "type": "object",
  "required": ["rule_id", "scope", "target", "assertion", "level", "created_at"],
  "additionalProperties": false,
  "properties": {
    "rule_id": {
      "type": "string",
      "description": "Stable unique ID for the rule (e.g., v1.username.allowed_chars)."
    },
    "schema_version": {
      "type": "string",
      "description": "Schema version for this rule definition.",
      "default": "1.0"
    },
    "scope": {
      "type": "string",
      "enum": ["input", "auth", "profile", "analytics", "api", "system"],
      "description": "Area of application for the rule."
    },
    "target": {
      "type": "string",
      "description": "Field or logical target this rule applies to (e.g., username, email, password, content.body)."
    },
    "assertion": {
      "type": "object",
      "description": "The core assertion to evaluate. Validators will evaluate this object according to the 'assertion_type'.",
      "required": ["assertion_type"],
      "properties": {
        "assertion_type": {
          "type": "string",
          "enum": ["regex", "range", "enum", "custom_js", "json_schema", "function_ref"],
          "description": "How to evaluate the rule."
        },
        "pattern": { "type": "string", "description": "Regex pattern used when assertion_type == 'regex'." },
        "min": { "type": "number", "description": "Minimum value/length when assertion_type == 'range'." },
        "max": { "type": "number", "description": "Maximum value/length for range assertions." },
        "allowed_values": { "type": "array", "items": { "type": ["string", "number", "boolean"] } },
        "json_schema": { "type": "object", "description": "Embedded JSON Schema fragment when assertion_type == 'json_schema'." },
        "function_ref": { "type": "string", "description": "Reference to validator function in registry (e.g., validators.isNotDisposableEmail)." }
      },
      "additionalProperties": true
    },
    "level": {
      "type": "string",
      "enum": ["error", "warn", "info", "audit"],
      "description": "Enforcement level. 'error' rejects input; 'warn' allows but logs; 'audit' records event only."
    },
    "message": {
      "type": "object",
      "description": "Localized message templates used when rule fires.",
      "properties": {
        "default": { "type": "string" },
        "i18n": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Freeform metadata (owner, why, link to docs, last_reviewed, exempt_roles).",
      "additionalProperties": true
    },
    "created_at": { "type": "string", "format": "date-time" },
    "updated_at": { "type": ["string", "null"], "format": "date-time" }
  }
}
